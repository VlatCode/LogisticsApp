// <auto-generated />
using LogisticsApp.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogisticsApp.DataAccess.Migrations
{
    [DbContext(typeof(LogisticsAppDbContext))]
    [Migration("20230130105901_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogisticsApp.Domain.Models.Calculation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CalculationType")
                        .HasColumnType("int");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<int>("CourierId")
                        .HasColumnType("int");

                    b.Property<int>("From")
                        .HasColumnType("int");

                    b.Property<int>("To")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourierId");

                    b.ToTable("Calculations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CalculationType = 0,
                            Cost = 15.0,
                            CourierId = 1,
                            From = 0,
                            To = 2
                        },
                        new
                        {
                            Id = 2,
                            CalculationType = 0,
                            Cost = 18.0,
                            CourierId = 1,
                            From = 2,
                            To = 15
                        },
                        new
                        {
                            Id = 3,
                            CalculationType = 0,
                            Cost = 35.0,
                            CourierId = 1,
                            From = 15,
                            To = 20
                        },
                        new
                        {
                            Id = 4,
                            CalculationType = 1,
                            Cost = 10.0,
                            CourierId = 1,
                            From = 0,
                            To = 1000
                        },
                        new
                        {
                            Id = 5,
                            CalculationType = 1,
                            Cost = 20.0,
                            CourierId = 1,
                            From = 1000,
                            To = 2000
                        },
                        new
                        {
                            Id = 6,
                            CalculationType = 0,
                            Cost = 16.5,
                            CourierId = 2,
                            From = 10,
                            To = 15
                        },
                        new
                        {
                            Id = 7,
                            CalculationType = 0,
                            Cost = 36.5,
                            CourierId = 2,
                            From = 15,
                            To = 25
                        },
                        new
                        {
                            Id = 8,
                            CalculationType = 0,
                            Cost = 40.0,
                            CourierId = 2,
                            From = 25,
                            To = 1000
                        },
                        new
                        {
                            Id = 9,
                            CalculationType = 1,
                            Cost = 11.99,
                            CourierId = 2,
                            From = 0,
                            To = 1000
                        },
                        new
                        {
                            Id = 10,
                            CalculationType = 1,
                            Cost = 21.989999999999998,
                            CourierId = 2,
                            From = 1000,
                            To = 1700
                        },
                        new
                        {
                            Id = 11,
                            CalculationType = 0,
                            Cost = 16.989999999999998,
                            CourierId = 3,
                            From = 10,
                            To = 20
                        },
                        new
                        {
                            Id = 12,
                            CalculationType = 0,
                            Cost = 33.990000000000002,
                            CourierId = 3,
                            From = 20,
                            To = 30
                        },
                        new
                        {
                            Id = 13,
                            CalculationType = 0,
                            Cost = 43.990000000000002,
                            CourierId = 3,
                            From = 30,
                            To = 1000
                        },
                        new
                        {
                            Id = 14,
                            CalculationType = 1,
                            Cost = 9.5,
                            CourierId = 3,
                            From = 0,
                            To = 1000
                        },
                        new
                        {
                            Id = 15,
                            CalculationType = 1,
                            Cost = 19.5,
                            CourierId = 3,
                            From = 1000,
                            To = 2000
                        },
                        new
                        {
                            Id = 16,
                            CalculationType = 1,
                            Cost = 48.5,
                            CourierId = 3,
                            From = 2000,
                            To = 5000
                        },
                        new
                        {
                            Id = 17,
                            CalculationType = 1,
                            Cost = 147.5,
                            CourierId = 3,
                            From = 5000,
                            To = 50000
                        });
                });

            modelBuilder.Entity("LogisticsApp.Domain.Models.Courier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Couriers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourierName = "Cargo4You"
                        },
                        new
                        {
                            Id = 2,
                            CourierName = "ShipFaster"
                        },
                        new
                        {
                            Id = 3,
                            CourierName = "MaltaShip"
                        });
                });

            modelBuilder.Entity("LogisticsApp.Domain.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CalculationId")
                        .HasColumnType("int");

                    b.Property<int>("Dimensions")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CalculationId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("LogisticsApp.Domain.Models.Validation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourierId")
                        .HasColumnType("int");

                    b.Property<int>("From")
                        .HasColumnType("int");

                    b.Property<int>("To")
                        .HasColumnType("int");

                    b.Property<int>("ValidationType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourierId");

                    b.ToTable("Validations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourierId = 1,
                            From = 0,
                            To = 20,
                            ValidationType = 0
                        },
                        new
                        {
                            Id = 2,
                            CourierId = 1,
                            From = 0,
                            To = 2000,
                            ValidationType = 1
                        },
                        new
                        {
                            Id = 3,
                            CourierId = 2,
                            From = 10,
                            To = 30,
                            ValidationType = 0
                        },
                        new
                        {
                            Id = 4,
                            CourierId = 2,
                            From = 0,
                            To = 1700,
                            ValidationType = 1
                        },
                        new
                        {
                            Id = 5,
                            CourierId = 3,
                            From = 0,
                            To = 10,
                            ValidationType = 0
                        },
                        new
                        {
                            Id = 6,
                            CourierId = 3,
                            From = 500,
                            To = 50000,
                            ValidationType = 1
                        });
                });

            modelBuilder.Entity("LogisticsApp.Domain.Models.Calculation", b =>
                {
                    b.HasOne("LogisticsApp.Domain.Models.Courier", "Courier")
                        .WithMany("Calculations")
                        .HasForeignKey("CourierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courier");
                });

            modelBuilder.Entity("LogisticsApp.Domain.Models.Package", b =>
                {
                    b.HasOne("LogisticsApp.Domain.Models.Calculation", "Calculation")
                        .WithMany("Packages")
                        .HasForeignKey("CalculationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Calculation");
                });

            modelBuilder.Entity("LogisticsApp.Domain.Models.Validation", b =>
                {
                    b.HasOne("LogisticsApp.Domain.Models.Courier", "Courier")
                        .WithMany("Validations")
                        .HasForeignKey("CourierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courier");
                });

            modelBuilder.Entity("LogisticsApp.Domain.Models.Calculation", b =>
                {
                    b.Navigation("Packages");
                });

            modelBuilder.Entity("LogisticsApp.Domain.Models.Courier", b =>
                {
                    b.Navigation("Calculations");

                    b.Navigation("Validations");
                });
#pragma warning restore 612, 618
        }
    }
}
